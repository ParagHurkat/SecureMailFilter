@page "/securemail"
@using System.Text.RegularExpressions
@using Azure.AI;
@using Azure.AI.TextAnalytics;
@using Azure;
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<textarea rows="15" cols="60" @bind="inputText"></textarea>
@* <button class="btn btn-primary" @onclick="StripSourceLines">Click me</button> *@
<FluentButton Appearance="@Appearance.Accent" @onclick="StripSourceLines">Click Me</FluentButton>
<textarea rows="15" cols="60" @bind="outputText"></textarea>
<textarea rows="15" cols="60" @bind="nonMSText"></textarea>

@code {
    private int currentCount = 0;
    private string inputText = "";
    private string outputText = "";
    private String nonMSText = "";
    private void StripSourceLines()
    {

        string endpoint = "https://paragaiservice.cognitiveservices.azure.com/";
        string apiKey = "b70652227398482a81cde45c35c0b190";

        var credential = new AzureKeyCredential(apiKey);
        var client = new TextAnalyticsClient(new Uri(endpoint), credential);

        string pattern = @"\s*\[.*?\]";

        // Replace source lines with an empty string
        string result = Regex.Replace(inputText, pattern, string.Empty);

        var documents = new List<TextDocumentInput>()
        {
            new TextDocumentInput("1", result)
            {
                Language = "en"
            }
        };

        var finalResult = client.RecognizeEntitiesBatch(documents);

        var nonMicrosoftLinks = finalResult.Value.FirstOrDefault()?.Entities
            .Where(e => e.Category == EntityCategory.Url)
            .Select(e => e.Text)
            .Where(url => !url.Contains("microsoft.com"))
            .ToList();



        foreach (var link in nonMicrosoftLinks)
        {
            nonMSText = string.Concat(link);
        }

        outputText= result;
    }

}
